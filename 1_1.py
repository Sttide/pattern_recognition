#pattern_recognition     author:15030140050

#对w1类中的3个特征，分别求解最大似然估计均值和方差
#由数学计算可得，通过极大似然法得到的正态分布均值就是样本均值，方差为
#(x-uc)(x-uc)^T的均值
from numpy import *
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

w1=[[0.42,-0.087,0.58],
    [-0.20,-3.00,-3.40],
    [1.30,-0.32,1.70],
    [0.39,0.71,0.23],
    [-1.6,-5.3,-0.15],
    [-0.029,0.89,-4.70],
    [-0.23,1.90,2.20],
    [0.27,-0.30,-0.87],
    [-1.90,0.76,-2.10],
    [0.87,-1.0,-2.6]]

w2=[[-0.40,0.58,-0.089],
    [-0.31,0.27,-0.04],
    [0.38,0.055,-0.035],
    [-0.15,0.53,0.011],
    [-0.35,0.47,0.034],
    [0.17,0.69,0.10],
    [-0.011,0.55,-0.18],
    [-0.27,0.61,0.12],
    [-0.065,0.49,0.0012],
    [-0.12,0.054,-0.063]]

w3=[[0.835,1.60,-0.014],
    [1.10,1.60,0.48],
    [-0.44,-0.41,0.32],
    [0.047,-0.45,1.40],
    [0.28,0.35,3.10],
    [-0.39,-0.48,0.11],
    [0.34,-0.079,0.14],
    [-0.30,-0.22,2.2],
    [1.10,1.20,-0.46],
    [0.18,-0.11,-0.49]]

meanu = mean(w1,axis=0)
print(meanu)
squarec = []
for i in range(len(w1)):
    squarec.append((w1[i]-meanu)*(w1[i]-meanu).T)
yita = mean(squarec,axis=0)
print(yita)



ax = plt.subplot(111, projection='3d')  # 创建一个三维的绘图工程
#  将数据点分成三部分画，在颜色上有区分度
for i in range(len(w1)):
    ax.scatter(w1[i][0],w1[i][1],w1[i][2], c='y')  # 绘制数据点
for i in range(len(w2)):
    ax.scatter(w2[i][0], w2[i][1], w2[i][2], c='r')
for i in range(len(w3)):
    ax.scatter(w3[i][0], w3[i][1], w3[i][2], c='g')
#ax.scatter(x[10:20], y[10:20], z[10:20], c='r')
#ax.scatter(x[30:40], y[30:40], z[30:40], c='g')

ax.set_zlabel('Z')  # 坐标轴
ax.set_ylabel('Y')
ax.set_xlabel('X')
plt.show()
